(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage")&&(document.getElementById("errorMessage").textContent=e,document.getElementById("errorBox").classList.remove("hidden"))},a=e=>{document.getElementById("normalMessage")&&(document.getElementById("normalMessage").textContent=e,document.getElementById("normalMessageBox").classList.remove("hidden"))},r=()=>{document.getElementById("errorBox").classList.add("hidden"),document.getElementById("normalMessageBox")&&document.getElementById("normalMessageBox").classList.add("hidden")};e.exports={handleError:t,handleMessage:a,hideError:r,sendPost:async(e,s,n)=>{const c=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),m=await c.json();r(),m.error&&t(m.error),m.message&&a(m.message),m.redirect&&(window.location=m.redirect),n&&n(m)}}}},t={};function a(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}(()=>{const e=a(603),t=e=>React.createElement("div",{id:"accountInfo",className:"center-text"},React.createElement("h1",null,e.username.toUpperCase(),"'S PROFILE")),r=e=>React.createElement("form",{id:"passwordChangeForm",name:"passwordChangeForm",onSubmit:s,action:"/changePassword",method:"POST",className:"input-group vertical col-sm"},React.createElement("h3",null,"Change Password"),React.createElement("label",{htmlFor:"oldPass"},"Old password: "),React.createElement("input",{id:"oldPass",type:"password",name:"oldPass",placeholder:"old password"}),React.createElement("label",{htmlFor:"pass"},"New password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"new password"}),React.createElement("input",{id:"pass2",type:"password",name:"pass2",placeholder:"retype password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Change password"})),s=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#oldPass").value,r=t.target.querySelector("#pass").value,s=t.target.querySelector("#pass2").value,n=t.target.querySelector("#_csrf").value;return a&&r&&s?r!==s?(e.handleError("New passwords do not match!"),!1):(e.sendPost(t.target.action,{oldPass:a,pass:r,pass2:s,_csrf:n}),!1):(e.handleError("All fields are required!"),!1)},n=e=>React.createElement("form",{id:"usernameChangeForm",name:"usernameChangeForm",onSubmit:c,action:"/changeUsername",method:"POST",className:"input-group vertical col-sm"},React.createElement("h3",null,"Change Username"),React.createElement("label",{htmlFor:"oldUser"},"Old account info: "),React.createElement("input",{id:"oldUser",type:"text",name:"oldUser",placeholder:"old username"}),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"newUser"},"New username: "),React.createElement("input",{id:"newUser",type:"text",name:"newUser",placeholder:"new username"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Change username"})),c=async a=>{a.preventDefault(),e.hideError();const r=a.target.querySelector("#oldUser").value,s=a.target.querySelector("#pass").value,n=a.target.querySelector("#newUser").value,c=a.target.querySelector("#_csrf").value;return r&&s&&n?(e.sendPost(a.target.action,{oldUser:r,pass:s,newUser:n,_csrf:c}),ReactDOM.render(React.createElement(t,{username:n,csrf:c}),document.getElementById("accountInfo")),!1):(e.handleError("All fields are required!"),!1)},m=async(t,a)=>{t.preventDefault(),e.hideError();const r=t.target.querySelector("#_csrf").value;return e.sendPost(t.target.action,{premium:a,_csrf:r}),ReactDOM.render(React.createElement(o,{premium:a,csrf:r}),document.getElementById("premium")),!1},o=e=>"true"===e.premium?React.createElement("form",{id:"premiumForm",name:"premiumForm",onSubmit:e=>m(e,"false"),action:"/setPremium",method:"POST",className:"premiumForm center-text"},React.createElement("h3",null,"You have premium!"),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"premiumButton",type:"submit",value:"Remove Premium"})):React.createElement("form",{id:"premiumForm",name:"premiumForm",onSubmit:e=>m(e,"true"),action:"/setPremium",method:"POST",className:"premiumForm center-text"},React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"premiumButton",type:"submit",value:"Buy Premium"})),l=t=>{if(0===t.posts.length)return React.createElement("div",{className:"PostList"},React.createElement("h3",null,"Looks awfully empty here... Why not post something?"));const a=t.posts.reverse().map((a=>a.poster===t._id?React.createElement("div",{key:a._id,className:"post card fluid"},React.createElement("div",{className:"section dark row"},React.createElement("h4",{className:"col-sm"}," ",a.username,": "),React.createElement("form",{name:"deleteForm",action:"/deletePost",onSubmit:r=>{r.preventDefault(),e.hideError(),e.sendPost(r.target.action,{postId:a._id,_csrf:t.csrf},d)},method:"POST",className:"deleteForm col-sm"},React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:t.csrf}),React.createElement("input",{className:"deleteButton",type:"submit",value:"Delete Post"}))),React.createElement("div",{className:"section"},React.createElement("p",null," ",a.mainBody," "))):React.createElement("div",{key:a._id,className:"post card fluid"},React.createElement("div",{className:"section dark"},React.createElement("h4",null," ",a.username,": ")),React.createElement("div",{className:"section"},React.createElement("p",null," ",a.mainBody," ")))));return React.createElement("div",{className:"postList col-sm"},a)},d=async()=>{const e=await fetch("/getUserPosts"),t=await e.json(),a=await fetch("/getUserInfo"),r=await a.json(),s=await fetch("/getToken"),n=await s.json();ReactDOM.render(React.createElement(l,{posts:t.posts,_id:r._id,csrf:n.csrfToken}),document.getElementById("accountPosts"))};window.onload=async()=>{const e=await fetch("/getToken"),a=await e.json(),s=await fetch("/getPremium"),c=await s.json(),m=await fetch("/getUserInfo"),l=await m.json();ReactDOM.render(React.createElement(t,{username:l.username,csrf:a.csrfToken}),document.getElementById("accountInfo")),ReactDOM.render(React.createElement(r,{csrf:a.csrfToken}),document.getElementById("passwordChange")),ReactDOM.render(React.createElement(n,{csrf:a.csrfToken}),document.getElementById("usernameChange")),ReactDOM.render(React.createElement(o,{premium:c.premium,csrf:a.csrfToken}),document.getElementById("premium")),d()}})()})();